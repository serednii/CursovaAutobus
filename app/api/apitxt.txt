// http://localhost:3000/api/users
// http://localhost:3000/api/updateRouteById
// http://localhost:3000/api/searchRoute
// http://localhost:3000/api/getUsersByIdBySelect
// http://localhost:3000/api/getUniqueRoutes
// http://localhost:3000/api/getRoutesByPassengerId
// http://localhost:3000/api/getRoutesById
// http://localhost:3000/api/getRoutesByDriverId
// http://localhost:3000/api/deleteroute
// http://localhost:3000/api/deletePassengerSeatsList
// http://localhost:3000/api/createroute
// http://localhost:3000/api/auth

// Поточний endpoint	Пропозиція	Коментар
// /api/users	                    /api/users	✅ Залишити, якщо отримує всіх

// /api/getUniqueRoutes	            /api/routes/unique	Уточнення логіки
// /api/updateRouteById	            /api/routes/:id (метод PUT)	RESTful оновлення маршруту
// /api/searchRoute	                /api/routes/search	Пошук — краще як підресурс
// /api/getUsersByIdBySelect	    /api/users/select або /api/users/by-ids	Уточнити, що це вибірка
// /api/getRoutesByPassengerId	    /api/passengers/:id/routes	Вкладені маршрути пасажира
// /api/getRoutesById	            /api/routes/:id (метод GET)	Отримання маршруту
// /api/getRoutesByDriverId 	    /api/drivers/:id/routes	Як з пасажиром
// /api/deleteroute	                /api/routes/:id (метод DELETE)	RESTful видалення
// /api/deletePassengerSeatsList	/api/passengers/:id/seats (метод DELETE)	Видалення місць пасажира
// /api/createroute	                /api/routes (метод POST)	Створення маршруту




// GET /api/routes → отримати всі маршрути
// GET /api/routes/id → отримати по id



// /api/v1/auth/api/auth/login або /api/auth/signup	Уточнити дію


////////////////////////////////////////////////////////////////
// GET /api/v1/users/id/ отримати користувача по  id з усіма полями
// GET /api/v1/users/id/?select=name,id,phone,email отримати користувача по id з вказаними  полями

// GET /api/v1/users/ отримати всіх користувачів усіма полями
// GET /api/v1/users/?select=name,id,phone,email отримати користувачів по  певних id з вказаними  полями

// GET /api/v1/users/?email={myemail@mail.com} отримати користувача з певним email і з усіма полями
// GET /api/v1/users/?select=name,id,phone,email&email={myemail@mail.com}отримати користувача з певним email з вказаними  полями

// GET /api/v1/users/?filter[ids]={1,3,5,6,7,8,34} отримати користувача з певним email і з усіма полями
// GET /api/v1/users/?select=name,id,phone,email&filter[ids]={1,3,5,6,7,8,34}отримати користувача з певним email з вказаними  полями

// POST /api/v1/users → створити користувача

// DELETE /api/v1/users/id видалити користувача по id
////////////////////////////////////////////////////////////////

// POST /api/v1/routes → створити
// PATCH /api/v1/routes/:id → оновити дані частково

// DELETE /api/v1/routes/:id → видалити

// Групуй ендпоінти логічно: /routes, /users, /drivers, /passengers, /auth.
